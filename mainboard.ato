import Resistor, Capacitor, SPI, I2C, USB2_0_IF, ElectricPower
from "atopile/esp32s3/esp32s3.ato" import ESP32S3
from "eigenlucy/particlecounter/main.ato" import ParticleCounter
from "eigenlucy/micromppt/elec/src/micromppt.ato" import Micromppt
from "eigenlucy/e22900m30s/main.ato" import App
from "oled.ato" import OLED
from "eigenlucy/nonhumanscent/nose.ato" import Nose
from "atgm336h.ato" import ATGM336H
from "cutoff.ato" import Cutoff
from "atopile/ti-bq2404x//bq2404x.ato" import BQ24040DSQR
from "atopile/ti-tps63020/ti-tps63020.ato" import TPS63020DSJR
from "atopile/usb-connectors/usb-connectors.ato" import USBCConn
from "xh2a.ato" import XH2A
from "oled-128-32.ato" import OLED12832
from "atopile/addressable-leds/sk6805-ec20.ato" import SK6805EC20
from "eigenlucy/ncp1529asnt1g/main.ato" import Ldo
from "4p1mm_jst.ato" import _4P1MMJST

module Mainboard:
    power = new ElectricPower
    power_5V = new ElectricPower; power_5V.gnd ~ power.gnd
    power_3V3 = new ElectricPower; power_3V3.gnd ~ power.gnd
    power_vbat = new ElectricPower; power_vbat.gnd ~ power.gnd
    battery_conn = new XH2A
    battery_conn.p1 ~ power_vbat.vcc; battery_conn.p2 ~ power_vbat.gnd

    usbc = new USBCConn
    power_usb = new ElectricPower
    power_usb.vcc ~ usbc.usb2.buspower.hv; power_usb.gnd ~ usbc.usb2.buspower.gnd
    power_5V ~ power_usb

    i2c_conn = new _4P1MMJST
    i2c_conn.power ~ power_3V3 

    uc = new ESP32S3
    uc.power ~ power_3V3
    uc.i2c ~ i2c_conn.i2c

    # 5V 1A Single Cell Lion Charger
    bms = new BQ24040DSQR
    bms.power_in ~ power_usb
    bms.power_batt ~ power_vbat
    # bms.power_good.io ~ uc.ioX
    # bms.charge_status.io ~ uc.ioX

    boostbuck = new TPS63020DSJR
    boostbuck.power_in ~ power_vbat
    boostbuck.power_out ~ power_5V
    # figure out if i can put 5V on Vout from the USB and what io connections this needs

    # led = new SK6805EC20
    # led.power ~ power_3V3

    ldo = new Ldo
    ldo.Vin ~ power_vbat
    ldo.Vout ~ power_3V3

    lora = new App
    lora.power ~ power_5V

    oled = new OLED12832
    oled.power_3v3 ~ power_3V3
    oled.power_5v ~ power_5V
    oled.i2c ~ uc.i2c

    # bme688 = new Nose
    # bme688.power ~ power_3V3
    # bme688.i2c ~ uc.i2c

    gps = new ATGM336H
    gps.power ~ power_3V3
    gps.i2c ~ uc.i2c
    # Connect RTC voltage, maybe add another small battery

    # detector = new ParticleCounter
    # detector.power ~ power_5V # Check if this is right
    # detector.out ~ uc.io2 # ADC Channel

    cutoff = new Cutoff
    cutoff.power ~ power_5V # cutoff.power--/\1kohm/\-->|supercap|
    # IO can be remapped as needed for layout, check esp32s3.ato
    cutoff.SC_GATE ~ uc.io0 # Dis/connect supercapacitor
    cutoff.CUTOFF_GATE ~ uc.io1 # Fire cutoff, active high

